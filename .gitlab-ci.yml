# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

variables:
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: test_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

pytests:
  image: python:3.9
  stage: test
  services:
    - postgres:11
  variables:
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
    PIP_DOWNLOAD_CACHE: $CI_PROJECT_DIR/.cache/pip_download_cache
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .cache
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      cobertura: coverage.xml
  script:
    - pip install pipenv
    - pipenv install --deploy --system --clear --dev
    - coverage run --source=./ -m pytest ./tests
    - coverage report -m --skip-covered
    - coverage xml

black:
  image: python:3.9
  stage: test
  allow_failure: true
  variables:
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
    PIP_DOWNLOAD_CACHE: $CI_PROJECT_DIR/.cache/pip_download_cache
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .cache
  script:
    - pip install black==21.10b0
    - black --version
    - black --check --diff ./

integration test:
  image: docker
  stage: test
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
    PIP_DOWNLOAD_CACHE: $CI_PROJECT_DIR/.cache/pip_download_cache
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .cache
      - ~/.cache/pip
  before_script:
    - apk add --no-cache docker-compose python3 && ln -sf python3 /usr/bin/python
    - python3 -m ensurepip
    - pip3 install --upgrade pip setuptools
    - docker-compose up -d --build service_a service_b service_c service_d federation || docker-compose logs
  script:
    - docker-compose run --rm test pytest ./src
